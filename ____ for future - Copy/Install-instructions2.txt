Infinigen: Infinite Photorealistic Worlds using Procedural Generation
================================================

run on Wsl Ubuntu
=================

https://github.com/princeton-vl/infinigen

git clone --recursive https://github.com/princeton-vl/infinigen.git
cd infinigen
conda create --name infinigen python=3.10
conda activate infinigen

# take about 10 mintues:
bash install.sh

cd blender
pwd
# copy the full path :

export BLENDER="/mnt/c/python-cool-stuff/infinigen/blender/blender"

cd worldgen
mkdir outputs

# Generate a scene layout
BLENDER -noaudio --background --python generate.py -- --seed 0 --task coarse -g desert.gin simple.gin --output_folder outputs/helloworld/coarse



# For videos:
bash install.sh flip_fluids
bash install.sh opengl




conda env create -f environment.yaml
conda activate ldm

pip install setuptools==59.5.0
pip install pillow==9.0.1

#download models

mkdir -p models/ldm/text2img-large/
wget -O models/ldm/text2img-large/model.ckpt https://ommer-lab.com/files/latent-diffusion/nitro/txt2img-f8-large/model.ckpt

# This is the syntax
python main.py --base configs/latent-diffusion/txt2img-1p4B-finetune.yaml 
               -t 
               --actual_resume /path/to/pretrained/model.ckpt 
               -name <run_name> 
               --gpus 0, 
               --data_root /path/to/directory/with/images
               --init_word <initialization_word>

# real command 
python main.py --base configs/latent-diffusion/txt2img-1p4B-finetune.yaml -t --actual_resume models/ldm/text2img-large/model.ckpt --name MyTest --gpus 0 --data_root Face-images --init_word Puppy --seed 666 --no-test





# open the txt2img-1p4B-finetune.yaml file




cd C:/Python-Cool-Stuff
git clone https://github.com/omerbt/Text2LIVE.git
cd Text2LIVE

pip install -r requirements.txt

gdown https://drive.google.com/uc?id=1osN4PlPkY9uk6pFqJZo8lhJUjTIpa80J&export=download
unzip data.zip

Video Editing
=============
Run the following command to start training :
python train_video.py --example_config car-turn_winter.yaml





