https://github.com/sczhou/CodeFormer
===========================================

conda create --name Codeformer3 python=3.11
conda activate Codeformer3 


git clone https://github.com/sczhou/CodeFormer.git
cd CodeFormer


#################### pip install -r requirements.txt

# install Pytorch since the requirements.txt install the cpu and not Gpu
# ======================================================================

# -> get cuda version
nvcc --version

# Cuda 12.4
conda install pytorch==2.5.0 torchvision==0.20.0 torchaudio==2.5.0 pytorch-cuda=12.4 -c pytorch -c nvidia 

pip install addict==2.4.0
pip install future==1.0.0
pip install lmdb==1.6.2
pip install opencv-python==4.11.0.86
pip install requests==2.32.3
pip install scikit-image==0.25.2
pip install tb-nightly==2.20.0a20250602
pip install tqdm==4.67.1
pip install yapf==0.43.0
pip install lpips==0.1.4


#pip install numpy==2.2.6
#pip install Pillow==9.5.0
# pip install pyyaml
#pip install scipy==1.15.3

# more commands :
python basicsr/setup.py develop
conda install -c conda-forge dlib

# download pre-trained models :

python scripts/download_pretrained_models.py facelib
python scripts/download_pretrained_models.py dlib 
python scripts/download_pretrained_models.py CodeFormer

---------------------------------------------------------------------------------------------------

# copy the file crop_align_face2.py to scripts folder !!!

---------------------------------------------------------------------------------------------------
# copy your images to : "inputs/whole_imgs" !!!!!!!

--------------------------------------------------------------------------
if you would like to crop(!!!) the faces in images you can use this command :
python scripts/crop_align_face2.py -i [input folder] -o [output folder]

###### sample command for to generated cropped images
python scripts/crop_align_face2.py -i inputs/whole_imgs -o inputs/cropped_faces

----------------------------------------------------------------------------------

1. üßëüèª Face Restoration (cropped and aligned face)
# For cropped and aligned faces (512x512)
python inference_codeformer.py -w 0.5 --has_aligned --input_path [image folder]|[image path]

üñºÔ∏è Whole Image Enhancement
# For whole image
# Add '--bg_upsampler realesrgan' to enhance the background regions with Real-ESRGAN
# Add '--face_upsample' to further upsample restorated face with Real-ESRGAN
# Add -w --fidelity_weight

# sample : 
python inference_codeformer.py -w 0.7 --input_path inputs/whole_imgs

# run this command for upscale images : 
#####################################
python inference_codeformer.py --input_path inputs/whole_imgs --output_path results -w 0.7 --bg_upsampler realesrgan --face_upsample

------------------------------------------------------------------------------------------
2. üé¨ Video Enhancement

please install ffmpeg first :
conda install -c conda-forge ffmpeg

# For video clips
# Video path should end with '.mp4'|'.mov'|'.avi'

python inference_codeformer.py --bg_upsampler realesrgan --face_upsample -w 1.0 --input_path [video path]

# sample command
python inference_codeformer.py --bg_upsampler realesrgan --face_upsample -w 1.0 --input_path video/Startrek.avi

----------------------------------------------------------------------------------------------------------
3. üåà Face Colorization (cropped and aligned face)

We have 3 steps :


#step 1 :crop your gray image 
copy your image to whole_imgs folder

# run the crop command : !!!!
python scripts/crop_align_face.py -i [input folder] -o [output folder]

python scripts/crop_align_face.py -i inputs/whole_imgs 

# it will generate a faces images in the "inputs/cropped" 


Option 2 : If you run with no paramters the whole_imgs folder will be the input and the cropped folder will be the output
python scripts/crop_align_face.py

# step 2 : copy the face gray image to "inputs\gray_faces" folder 


# Step 3 : run the color process For cropped and aligned faces (512x512)
# Colorize black and white or faded photo

python inference_colorization.py --input_path [image folder]|[image path]

# if it is in the defalut gray folder , You can run :
python inference_colorization.py

Now , go to "results\gray_faces" folder and you can find your color image

------------------------------------------------------------------------------------------------

